name: Build and Push to Dockerhub
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs: 
  testing-vars-and-secrets:
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_URL: ${{ vars.DOCKER_HUB_URL }}
      DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
      HARBOR_PASSWORD: ${{ vars.HARBOR_PASSWORD }}
      HARBOR_REGISTRY: ${{ vars.HARBOR_REGISTRY }}
      HARBOR_URL: ${{ vars.HARBOR_URL }}
      HARBOR_USERNAME: ${{ vars.HARBOR_USERNAME }}
      PROJECT_NAME: ${{ vars.PROJECT_NAME }}
      
    steps:
      # Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Print environment variables for debugging
      - name: Print environment variables
        run: |
          echo "DOCKERHUB_USERNAME=${{ vars.DOCKERHUB_USERNAME }}"
          echo "Checking if GitHub secret is accessible"
          if [ -z "${{ secrets.GH_DOCKERHUB_TOKEN }}" ]; then
            echo "secrets.DOCKERHUB_TOKEN is not set!"
            exit 1
          else
            echo "secrets.DOCKERHUB_TOKEN is set"
          fi

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.GH_DOCKERHUB_TOKEN }}

      # Set up Docker Buildx for building multi-platform images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Iterate over each directory in the apps/ folder and build/push the Docker image
      - name: Build and Push Docker images
        run: |
          set -e  # Exit the script if any command fails
          for dir in ./apps/*/; do
            app_name=$(basename "$dir")
            echo "Building Docker image for $app_name"
            docker build -t ${{ vars.DOCKERHUB_USERNAME }}/$app_name:${{ github.sha }} -f $dir/Dockerfile $dir
            docker tag ${{ vars.DOCKERHUB_USERNAME }}/$app_name:${{ github.sha }} ${{ vars.DOCKERHUB_USERNAME }}/$app_name:latest
            
            echo "Running tests for $app_name"
            docker run --rm ${{ vars.DOCKERHUB_USERNAME }}/$app_name:${{ github.sha }} /bin/sh -c "./test.sh"
            
            echo "Pushing Docker image for $app_name"
            docker push ${{ vars.DOCKERHUB_USERNAME }}/$app_name:${{ github.sha }}
            docker push ${{ vars.DOCKERHUB_USERNAME }}/$app_name:latest
          done